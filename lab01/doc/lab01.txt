3BIT
з лабораторної роботи № 1 
з дисципліни «Програмування»

Виконала: студентка групи КН-924a 
Каліберда Софія Андріївна
Перевірив: доцент кафедри КІП
Лисиця Дмитро Олександрович


Тема: Вступ до програмування. Освоєння командної строки Linux
Мета: Освоїти командну строку Linux

Завдання: 
1. Встановлення VirtualBox
2. Завантаження та встановлення ОС. 
3. Встановлення необхідних пакетів. 
4. Клонування проекту з git. 
5. Огляд структури проекту. 
6. Компіляція проекту. 
7. Зміни в коді та перекомпіляція. 
8. Перекомпіляція проекту. 
9. Зміни в Makefile:
   Додати  ціль “all”, яка виконує цілі “prep compile check”;
   Перевірити роботу Makefile шляхом виконання команди: make all
   Внести зміни в Makefile
10. Визначення версій утиліт.
11. Дослідження роботи утиліти man.
12. Перегляд змін в git. 


Хід роботи: 
1. Завантаження  VirtualBox та встановлення образу Linux Lite. Після інсталяції було виконано оновлення компонентів системи за допомогою команд: sudo apt-get update
2. Встановлення необхідних пакетів. За допомогою пакетного менеджера “apt-get” було встановлено мінімально необхідні пакети для роботи: sudo apt-get install git gcc clang clang-format clang-tidy tree make cppcheck.
3. Клонування проекту з git. Для клонування репозиторію з github було встановлено додаток git та введено в командну строку команду git clone <url репозиторію>
4. Огляд структури проекту. Після клонування проекту було увійдено в директорію проекту та за допомогою утиліти “tree” було виведено на екран структуру каталогів проекту для ознайомлення з ним.
5. Компіляція проекту. Для компіляції проекту було використано файл Makefile. Виконано наступні дії:
6. Увійдено в каталог проекту;
7. Перевірено наявність Makefile за допомогою команди: ls Makefile
Виконано компіляцію проекту командою: make prep compile check
Перевірено, що помилок немає;
За допомогою утиліти “tree” знайдено створені бінарні файли;
Перейдено до каталогу “dist” та виконано бінарні файли.
8. Зміни в коді та перекомпіляція. Внесено нову змінну, при цьому наступна компіляція проекту була виконана без помилок. Зміни можна було побачити в даних, що виводяться на екран проектом.
9. Перекомпіляція проекту. Виконано перекомпіляцію проекту командою make clean prep compile check.
10. Зміни в Makefile:
   - Додано ціль “all”, яка виконує цілі “prep compile check”;
   - Перевірено роботу Makefile шляхом виконання команди: make all
11. Визначення версій утиліт. Визначено поточні версії утиліт “clang” та “make за допомогою команд: clang --version та make --version. 
clang --version: 
Ubuntu clang version 18.1.3 (1ubuntu1)
Target: x86_64-pc-linux-gnu
Thread model: posix InstalledDir: /usr/bin
make --version: 
GNU Make 4.3
Built for x86_64-pc-linux-gnu
Copyright (C) 1988-2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html> 
This is free software: you are free to change and redistribute it. 
There is NO WARRANTY, to the extent permitted by law.
12. Дослідження роботи утиліти man. “man” дозволяє переглядати опис команд, параметрів, опцій і прикладів використання. Наприклад, команда man ls виведе довідкову сторінку для команди ls.
13. Перегляд змін в git. Показано виконані зміни у файлах за допомогою команди: git 

Висновок:
Під час виконання лабораторної роботи я освоїла навички створення прототипів функцій та їх реалізації в окремих файлах, а також застосували методи модульного тестування для перевірки коректності функцій.
У ході роботи я здобула як теоретичні, так і практичні навички роботи в терміналі Linux. Були встановлені необхідні пакети, клонований репозиторій через “git” та виконана компіляція проекту за допомогою “make”. До проекту були внесені зміни в код і у файл “Makefile”, де додано ціль “all”. Ми також визначили версії утиліт “clang” і “make”.
Внесені зміни в код були відображені за допомогою команди “git diff”.
Загалом, ця робота дала змогу практично освоїти систему контролю версій, процес компіляції проектів у Linux та ознайомитися з корисними інструментами.
